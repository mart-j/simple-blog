{"version":3,"sources":["App.module.scss","pages/Articles.module.scss","pages/Home.tsx","pages/About.tsx","pages/Articles.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Home","readMoreButtonHandler","posts","map","id","title","toString","onClick","About","Articles","comments","addComment","inputElement","articleId","useParams","article","find","post","String","history","useHistory","useEffect","className","styles","heading","body","push","ref","type","Number","coment","index","App","useState","setPosts","setComments","useRef","fetch","then","response","json","postArray","container","nav","to","exact","path","newComment","current","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a185faee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\",\"nav\":\"App_nav__UeHIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Articles_heading__1OgOk\"};","import React, { FC } from 'react';\n\ntype Posts = {\n  body: string;\n  id: number;\n  title: string;\n  userId: number;\n};\n\ntype Props = {\n  posts: Posts[];\n  readMoreButtonHandler: (id: number) => void;\n};\nconst Home: FC<Props> = ({ readMoreButtonHandler, posts }) => {\n  return (\n    <section>\n      <h1>S훮kums</h1>\n\n      {posts &&\n        posts?.map(({ id, title }) => {\n          return (\n            <>\n              <div key={id.toString()}>{title}</div>\n              <br></br>\n              <button onClick={() => readMoreButtonHandler(id)}>\n                read more\n              </button>\n              <br></br>\n            </>\n          );\n        })}\n    </section>\n  );\n};\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <section>\n      <h1>Sveiks, tas esmu es bloga autors!</h1>\n      <p>Es rakstu blogu.</p>\n    </section>\n  );\n};\nexport default About;\n","import React, { FC, useEffect, RefObject } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport styles from './Articles.module.scss';\n\ntype Posts = {\n  body: string;\n  id: number;\n  title: string;\n  userId: number;\n};\n\ntype Comment = {\n  body: string;\n  id: number;\n};\ntype Props = {\n  posts: Posts[];\n  addComment: (index: number) => void;\n  inputElement: RefObject<HTMLInputElement>;\n  comments: Comment[];\n};\nconst Articles: FC<Props> = ({ comments, posts, addComment, inputElement }) => {\n  const { articleId } = useParams<{ articleId: string }>();\n\n  const article = posts?.find((post) => {\n    return String(post.id) === articleId;\n  });\n  const history = useHistory();\n  const backButtonHandler = () => {\n    history.push('/');\n  };\n\n  useEffect(() => {});\n\n  return (\n    <section>\n      <h1 className={styles.heading}>\n      {article?.id} {article?.title} \n      </h1>\n      <p>{article?.body}</p>\n      <button onClick={backButtonHandler}>Go Back</button>\n      <br></br>\n      <br></br>\n      <input ref={inputElement} type=\"text\" />\n      <button onClick={() => addComment(Number(articleId) - 1)}>\n        Add comment\n      </button>\n      <div>Comments:</div>\n      {comments &&\n        comments.map(\n          (coment, index) =>\n            coment.id === Number(articleId) - 1 && (\n              <div key={index.toString()}>{coment.body}</div>\n            ),\n        )}\n    </section>\n  );\n};\nexport default Articles;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Switch, Route, Link, useHistory } from 'react-router-dom';\nimport styles from './App.module.scss';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Articles from './pages/Articles';\n\ntype Posts = {\n  body: string;\n  id: number;\n  title: string;\n  userId: number;\n};\n\ntype Comment = {\n  body: string;\n  id: number;\n};\n\nconst App = () => {\n  const [posts, setPosts] = useState<Posts[]>();\n  const [comments, setComments] = useState<Comment[]>();\n  const history = useHistory();\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  const addComment = (index: number) => {\n    let newComment;\n    if (comments) {\n      newComment = [\n        ...comments!,\n        { body: inputElement.current?.value, id: index },\n      ];\n    } else {\n      newComment = [{ body: inputElement.current?.value, id: index }];\n    }\n    // @ts-ignore\n    setComments(newComment);\n    inputElement.current!.value = '';\n  };\n\n  const readMoreButtonHandler = (id: number) => {\n    history.push(`/articles/${id}`);\n  };\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((response) => response.json())\n      .then((postArray) => setPosts(postArray));\n  }, []);\n\n  useEffect(() => {\n    // alert('Esi sveicin훮ts man훮 blog훮');\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <nav className={styles.nav}>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/about\">About</Link>\n      </nav>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home readMoreButtonHandler={readMoreButtonHandler} posts={posts!} />\n        </Route>\n        <Route exact path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/articles/:articleId\">\n          <Articles\n            comments={comments!}\n            inputElement={inputElement}\n            addComment={addComment}\n            posts={posts!}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}