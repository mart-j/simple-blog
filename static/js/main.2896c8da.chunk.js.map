{"version":3,"sources":["assets/POSTS.tsx","pages/Home.tsx","pages/About.tsx","utils/firebase.tsx","pages/Articles.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["POSTS","useState","posts","setPosts","useEffect","axios","get","then","data","Home","history","useHistory","map","id","title","toString","onClick","push","readMoreButtonHandler","About","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Articles","comments","setComments","commentKeys","setCommentKeys","pushComment","setPushComment","articleId","useParams","inputElement","useRef","article","find","post","String","filteredComments","filter","coment","Number","database","ref","on","snapshot","val","Object","values","keys","body","onChange","current","value","type","index","comment","item","i","child","remove","App","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2896c8da.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ntype Posts = {\n  body: string;\n  id: number;\n  comment: string;\n  userId: number;\n  title: string;\n};\n\nconst POSTS = () => {\n  const [posts, setPosts] = useState<Posts[]>();\n\n  //   useEffect(() => {\n  //     if (posts) {\n  //       const newPosts = [...posts!];\n\n  //       while (newPosts.length > 0) {\n  //         const chunk = newPosts.splice(0, 20);\n\n  //         console.log(chunk);\n  //       }\n  //     }\n  //   }, [posts]);\n\n  useEffect(() => {\n    axios\n      .get('https://jsonplaceholder.typicode.com/posts')\n      .then(({ data }) => setPosts(data));\n  }, []);\n\n  return posts;\n};\n\nexport default POSTS;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport POSTS from '../assets/POSTS';\n\n\nconst Home = () => {\n  const history = useHistory();\n  const readMoreButtonHandler = (id: number) => {\n    history.push(`/simple-blog/articles/${id}`);\n  };\n\n  return (\n    <section>\n      <h1>SƒÅkums</h1>\n\n      {POSTS &&\n        POSTS()?.map(({ id, title }) => {\n          return (\n            <>\n              <div key={id.toString()}>{title}</div>\n              <br></br>\n              <button onClick={() => readMoreButtonHandler(id)}>\n                read more\n              </button>\n              <br></br>\n            </>\n          );\n        })}\n    </section>\n  );\n};\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <section>\n      <h1>Sveiks, tas esmu es bloga autors!</h1>\n      <p>Es rakstu blogu.</p>\n    </section>\n  );\n};\nexport default About;\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCNW_jOg636V5KXrqJxFOmV6i4q2sVpEz8',\n  authDomain: 'react-crud-b64eb.firebaseapp.com',\n  databaseURL: 'https://react-crud-b64eb.firebaseio.com',\n  projectId: 'react-crud-b64eb',\n  storageBucket: 'react-crud-b64eb.appspot.com',\n  messagingSenderId: '76311953971',\n  appId: '1:76311953971:web:be9547d05bbf3883aad946',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport POSTS from '../assets/POSTS';\nimport firebase from '../utils/firebase';\n\nconst Articles = () => {\n  const [comments, setComments] = useState<{ id: number; comment: string }[]>();\n  const [commentKeys, setCommentKeys] = useState<string[]>();\n  const [pushComment, setPushComment] = useState('');\n  const { articleId } = useParams<{ articleId: string }>();\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  // Navigate back to home\n  const history = useHistory();\n  const backButtonHandler = () => {\n    history.push('/simple-blog');\n  };\n\n  const changeHandler = () => {\n    setPushComment(inputElement.current!.value);\n  };\n\n  // Adding comments to database\n  const addComment = (index: number) => {\n    if (inputElement.current!.value) {\n      const commentsRef = firebase.database().ref('Comments');\n      commentsRef.push({ comment: pushComment, id: index });\n      inputElement.current!.value = '';\n    }\n  };\n\n  // Find post that belongs to ArticleId\n  const article = POSTS()?.find((post) => {\n    return String(post.id) === articleId;\n  });\n\n  // Find comment that belongs to post\n  const filteredComments = comments?.filter((coment) => {\n    return coment.id === Number(articleId);\n  });\n\n  const getCommentsFromDatabase = () => {\n    const commentsRef = firebase.database().ref('Comments');\n    commentsRef.on('value', (snapshot) => {\n      if (snapshot.val()) {\n        setComments(Object.values(snapshot.val()));\n        setCommentKeys(Object.keys(snapshot.val()));\n      } else {\n        setComments([]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getCommentsFromDatabase();\n  }, []);\n\n  const deleteComment = (index: number) => {\n    const commentRef = firebase\n      .database()\n      .ref('Comments')\n      .child(commentKeys![index]);\n    commentRef.remove();\n  };\n\n  return (\n    <section>\n      <h1>\n        {article?.id} {article?.title}\n      </h1>\n      <p>{article?.body}</p>\n      <button onClick={backButtonHandler}>Go Back</button>\n      <br></br>\n      <br></br>\n      <input onChange={changeHandler} ref={inputElement} type=\"text\" />\n      <button onClick={() => addComment(Number(article?.id))}>\n        Add comment\n      </button>\n      <div>Comments:</div>\n      {comments &&\n        filteredComments?.map((item, i) => {\n          return (\n            <>\n              <div key={item.toString()}>{item.comment}</div>\n              <button onClick={() => deleteComment(i)}>delete</button>\n            </>\n          );\n        })}\n    </section>\n  );\n};\nexport default Articles;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Articles from './pages/Articles';\n\nconst App = () => {\n  return (\n    <>\n      <Link to=\"/simple-blog\">Home</Link>\n      <Link to=\"/simple-blog/about\">About</Link>\n      <Switch>\n        <Route exact path=\"/simple-blog\">\n          <Home />\n        </Route>\n        <Route exact path=\"/simple-blog/about\">\n          <About />\n        </Route>\n        <Route path=\"/simple-blog/articles/:articleId\">\n          <Articles />\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}